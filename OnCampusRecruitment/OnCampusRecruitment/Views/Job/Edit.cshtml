@model OnCampusRecruitment.Models.CompanyJobPost

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/CompanyDashboardLayout.cshtml";
}

<h2 style="font-weight: 700;">Edit Posted Job</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CompanyJobPostID)

        <div class="well">
            <div class="form-group">
                @Html.LabelFor(model => model.Industry, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Industry, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Industry, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FunctionArea, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.FunctionArea, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FunctionArea, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TotalPosition, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TotalPosition, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TotalPosition, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.JobType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.JobType, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.JobType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.JobLocation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.JobLocation, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.JobLocation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Age, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MinimumEducation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.MinimumEducation, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MinimumEducation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DegreeTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.DegreeTitle, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DegreeTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CareerLevel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.CareerLevel, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CareerLevel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ApplyBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ApplyBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ApplyBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.JobPostingDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(x => x.JobPostingDate, new { @class = "form-control", @Value = @DateTime.Now.ToShortDateString(), @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.JobPostingDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
     
           <fieldset>
            <legend style="font-weight:bolder">Job Description</legend>
            <div class="form-group">
                <div class="col-md-5">
                   @Html.EditorFor(model => model.JobDescription, new { htmlAttributes = new { @class = "form-control" } })
                   @Html.ValidationMessageFor(model => model.JobDescription, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>      

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.CompanyProfileID, "CompanyProfileID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CompanyProfileID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CompanyProfileID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.CompanyProfileID, "CompanyProfileID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CompanyProfileID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CompanyProfileID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" style="width:100%" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
